# values-production.yaml - Production environment configuration
# Usage: helm install demo . -f values-production.yaml

webapp:
  replicaCount: 3
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: demo.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: demo-tls
        hosts:
          - demo.example.com
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 256Mi

backgroundworker:
  replicaCount: 3
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

sqlserver:
  enabled: true
  
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 100Gi
    storageClass: "fast-ssd"
  
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  # Production-grade probe settings
  readinessProbe:
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 60
    timeoutSeconds: 15
    failureThreshold: 3

redis:
  enabled: true
  
  master:
    persistence:
      enabled: true
      size: 32Gi
      storageClass: "fast-ssd"
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 32Gi
      storageClass: "fast-ssd"

# Production security and resource settings
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Pod disruption budgets for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Environment-specific settings
webapp:
  env:
    - name: ASPNETCORE_ENVIRONMENT
      value: "Production"
    - name: ASPNETCORE_URLS
      value: "http://+:8080"

backgroundworker:
  env:
    - name: DOTNET_ENVIRONMENT
      value: "Production"

# Node affinity for production workloads
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node-type
          operator: In
          values:
          - production