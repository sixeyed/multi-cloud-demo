apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multi-cloud-demo.fullname" . }}-webapp
  labels:
    {{- include "multi-cloud-demo.labels" . | nindent 4 }}
    app.kubernetes.io/component: webapp
spec:
  replicas: {{ .Values.webapp.replicaCount }}
  selector:
    matchLabels:
      {{- include "multi-cloud-demo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: webapp
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/webapp-configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "multi-cloud-demo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: webapp
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "multi-cloud-demo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.webapp.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{- if .Values.image.registry }}{{ .Values.image.registry }}/{{- end }}{{ .Values.image.repository }}/{{ .Values.webapp.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.webapp.service.targetPort }}
              protocol: TCP
          env:
            {{- toYaml .Values.webapp.env | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/appsettings.json
              subPath: appsettings.json
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.webapp.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.webapp.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.webapp.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.webapp.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.webapp.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "multi-cloud-demo.fullname" . }}-webapp-config
      nodeSelector:
        {{- if eq .Values.architecture.nodeArch "arm64" }}
        nodepool: arm64
        {{- else }}
        nodepool: default
        {{- end }}
        {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if eq .Values.architecture.nodeArch "arm64" }}
      tolerations:
        - key: "nodepool"
          operator: "Equal"
          value: "arm64"
          effect: "NoSchedule"
        {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- else }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}